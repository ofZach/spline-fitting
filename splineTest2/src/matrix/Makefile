# Makefile.in generated by automake 1.6.1 from Makefile.am.
# matrix/Makefile.  Generated from Makefile.in by configure.

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



#CXXFLAGS = -g -O2 -fno-implicit-templates -DMATRIX_TEMPLATE_INSTANTIATION
SHELL = /bin/sh

srcdir = .
top_srcdir = ..

prefix = /usr/local
exec_prefix = ${prefix}

bindir = ${exec_prefix}/bin
sbindir = ${exec_prefix}/sbin
libexecdir = ${exec_prefix}/libexec
datadir = ${prefix}/share
sysconfdir = ${prefix}/etc
sharedstatedir = ${prefix}/com
localstatedir = ${prefix}/var
libdir = ${exec_prefix}/lib
infodir = ${prefix}/info
mandir = ${prefix}/man
includedir = ${prefix}/include
oldincludedir = /usr/include
pkgdatadir = $(datadir)/nurbs++
pkglibdir = $(libdir)/nurbs++
pkgincludedir = $(includedir)/nurbs++
top_builddir = ..

ACLOCAL = aclocal-1.6
AUTOCONF = autoconf
AUTOMAKE = automake-1.6
AUTOHEADER = autoheader

am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /usr/bin/install -c
INSTALL_PROGRAM = ${INSTALL}
INSTALL_DATA = ${INSTALL} -m 644
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
INSTALL_SCRIPT = ${INSTALL}
INSTALL_HEADER = $(INSTALL_DATA)
transform = s,x,x,
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_alias = 
build_triplet = i386-apple-darwin11.4.0
host_alias = 
host_triplet = i386-apple-darwin11.4.0
target_alias = 
target_triplet = i386-apple-darwin11.4.0

EXEEXT = 
OBJEXT = o
PATH_SEPARATOR = :
AMTAR = tar
AS = @AS@
AWK = awk
CC = gcc
CPP = gcc -E
CPPUNIT_CPPFLAGS = 
CPPUNIT_LIBS = 
CXX = g++
DEPDIR = .deps
DLLTOOL = @DLLTOOL@
ECHO = /bin/echo
GL_CFLAGS = 
GL_LFLAGS = 
GL_LIBS = 
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LN_S = ln -s
MAGICK_CPPFLAGS = 
MAGICK_LDFLAGS = 
MAGICK_LIBS = 
OBJDUMP = @OBJDUMP@
PACKAGE = nurbs++
RANLIB = ranlib
STRIP = strip
VERSION = 3.0.11
X_CFLAGS = 
X_EXTRA_LIBS = 
X_LIBS = 
X_PRE_LIBS = 
am__include = include
am__quote = 
ar = 
clean_list = 
complex_header = complex.h
complex_lib = 
has_cppunit = no
inside_mindseye = 
install_sh = /Users/molmol/Desktop/nurbs++-3.0.11 2/install-sh
libcxx_flags = 
libld = 
libld_options = 
libs_inc = 
matrix_include = -I$(top_srcdir)/matrix -I$(top_srcdir)/image -I$(top_srcdir)/numerical
matrix_lib = -lmatrixN -lmatrixI -lmatrix
matrix_lib_flag = -L$(top_srcdir)/matrix -L$(top_srcdir)/image -L$(top_srcdir)/numerical
nurbs_demo_lib = 
nurbs_include = -I$(top_srcdir)/nurbs
nurbs_lib = $(packagedir)/nurbs/libnurbsf.la $(packagedir)/nurbs/libnurbsd.la
nurbs_libd = $(packagedir)/nurbs/libnurbsd.la
nurbs_libf = $(packagedir)/nurbs/libnurbsf.la
nurbs_libs = 
option_include = 
option_libs = 
packagedir = /Users/molmol/Desktop/nurbs++-3.0.11 2
perl = /usr/bin/perl

EXTRA_DIST = barray.cpp   barray2d.cpp  matrix.cpp  vector.cpp  

pkginclude_HEADERS = barray.h galloc2d.h barray2d.h hpoint_nd.h matrixTool.h coordinate.h point_nd.h cvector.h specialType.h error.h list.h specialVcc.h galloc.h matrix.h vector.h matrix_global.h

INCLUDES = -I../include 

lib_LTLIBRARIES = libmatrix.la
libmatrix_la_SOURCES = error.cpp   cvector.cpp list.cpp point_nd.cpp hpoint_nd.cpp coordinate.cpp matrixTool.cpp barray_int.cpp   barray2d_int.cpp  matrix_int.cpp  vector_int.cpp  barray_float.cpp   barray2d_float.cpp  matrix_float.cpp  vector_float.cpp  barray_double.cpp   barray2d_double.cpp  matrix_double.cpp  vector_double.cpp  barray_uchar.cpp   barray2d_uchar.cpp  matrix_uchar.cpp  vector_uchar.cpp  barray_char.cpp   barray2d_char.cpp  matrix_char.cpp  vector_char.cpp  barray_point.cpp   barray2d_point.cpp  matrix_point.cpp  vector_point.cpp  barray_hpoint.cpp   barray2d_hpoint.cpp  matrix_hpoint.cpp  vector_hpoint.cpp  barray_complex.cpp   barray2d_complex.cpp  matrix_complex.cpp  vector_complex.cpp  barray_coordinate.cpp   barray2d_coordinate.cpp  barray_void.cpp

libmatrix_la_LDFLAGS = -version-info 1:0:0
subdir = matrix
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/include/plib_config.h
CONFIG_CLEAN_FILES =
LTLIBRARIES = $(lib_LTLIBRARIES)

libmatrix_la_LIBADD =
am_libmatrix_la_OBJECTS = error.lo cvector.lo list.lo point_nd.lo \
	hpoint_nd.lo coordinate.lo matrixTool.lo barray_int.lo \
	barray2d_int.lo matrix_int.lo vector_int.lo barray_float.lo \
	barray2d_float.lo matrix_float.lo vector_float.lo \
	barray_double.lo barray2d_double.lo matrix_double.lo \
	vector_double.lo barray_uchar.lo barray2d_uchar.lo \
	matrix_uchar.lo vector_uchar.lo barray_char.lo barray2d_char.lo \
	matrix_char.lo vector_char.lo barray_point.lo barray2d_point.lo \
	matrix_point.lo vector_point.lo barray_hpoint.lo \
	barray2d_hpoint.lo matrix_hpoint.lo vector_hpoint.lo \
	barray_complex.lo barray2d_complex.lo matrix_complex.lo \
	vector_complex.lo barray_coordinate.lo barray2d_coordinate.lo \
	barray_void.lo
libmatrix_la_OBJECTS = $(am_libmatrix_la_OBJECTS)

DEFS = -DHAVE_CONFIG_H
DEFAULT_INCLUDES =  -I. -I$(srcdir) -I$(top_builddir)/include
CPPFLAGS = 
LDFLAGS = 
LIBS = 
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
DEP_FILES = ./$(DEPDIR)/barray2d_char.Plo \
	./$(DEPDIR)/barray2d_complex.Plo \
	./$(DEPDIR)/barray2d_coordinate.Plo \
	./$(DEPDIR)/barray2d_double.Plo \
	./$(DEPDIR)/barray2d_float.Plo \
	./$(DEPDIR)/barray2d_hpoint.Plo \
	./$(DEPDIR)/barray2d_int.Plo \
	./$(DEPDIR)/barray2d_point.Plo \
	./$(DEPDIR)/barray2d_uchar.Plo \
	./$(DEPDIR)/barray_char.Plo \
	./$(DEPDIR)/barray_complex.Plo \
	./$(DEPDIR)/barray_coordinate.Plo \
	./$(DEPDIR)/barray_double.Plo \
	./$(DEPDIR)/barray_float.Plo \
	./$(DEPDIR)/barray_hpoint.Plo \
	./$(DEPDIR)/barray_int.Plo \
	./$(DEPDIR)/barray_point.Plo \
	./$(DEPDIR)/barray_uchar.Plo \
	./$(DEPDIR)/barray_void.Plo \
	./$(DEPDIR)/coordinate.Plo ./$(DEPDIR)/cvector.Plo \
	./$(DEPDIR)/error.Plo ./$(DEPDIR)/hpoint_nd.Plo \
	./$(DEPDIR)/list.Plo ./$(DEPDIR)/matrixTool.Plo \
	./$(DEPDIR)/matrix_char.Plo \
	./$(DEPDIR)/matrix_complex.Plo \
	./$(DEPDIR)/matrix_double.Plo \
	./$(DEPDIR)/matrix_float.Plo \
	./$(DEPDIR)/matrix_hpoint.Plo \
	./$(DEPDIR)/matrix_int.Plo \
	./$(DEPDIR)/matrix_point.Plo \
	./$(DEPDIR)/matrix_uchar.Plo \
	./$(DEPDIR)/point_nd.Plo \
	./$(DEPDIR)/vector_char.Plo \
	./$(DEPDIR)/vector_complex.Plo \
	./$(DEPDIR)/vector_double.Plo \
	./$(DEPDIR)/vector_float.Plo \
	./$(DEPDIR)/vector_hpoint.Plo \
	./$(DEPDIR)/vector_int.Plo \
	./$(DEPDIR)/vector_point.Plo \
	./$(DEPDIR)/vector_uchar.Plo
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
CXXFLAGS = -g -O2 -fno-implicit-templates
DIST_SOURCES = $(libmatrix_la_SOURCES)
HEADERS = $(pkginclude_HEADERS)

DIST_COMMON = $(pkginclude_HEADERS) Makefile.am Makefile.in
SOURCES = $(libmatrix_la_SOURCES)

all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in:  Makefile.am  $(top_srcdir)/configure.in $(ACLOCAL_M4)
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  matrix/Makefile
Makefile:  $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)
libLTLIBRARIES_INSTALL = $(INSTALL)
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(libdir)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f="`echo $$p | sed -e 's|^.*/||'`"; \
	    echo " $(LIBTOOL) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) $$p $(DESTDIR)$(libdir)/$$f"; \
	    $(LIBTOOL) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) $$p $(DESTDIR)$(libdir)/$$f; \
	  else :; fi; \
	done

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	    p="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(LIBTOOL) --mode=uninstall rm -f $(DESTDIR)$(libdir)/$$p"; \
	  $(LIBTOOL) --mode=uninstall rm -f $(DESTDIR)$(libdir)/$$p; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
libmatrix.la: $(libmatrix_la_OBJECTS) $(libmatrix_la_DEPENDENCIES) 
	$(CXXLINK) -rpath $(libdir) $(libmatrix_la_LDFLAGS) $(libmatrix_la_OBJECTS) $(libmatrix_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/barray2d_char.Plo
include ./$(DEPDIR)/barray2d_complex.Plo
include ./$(DEPDIR)/barray2d_coordinate.Plo
include ./$(DEPDIR)/barray2d_double.Plo
include ./$(DEPDIR)/barray2d_float.Plo
include ./$(DEPDIR)/barray2d_hpoint.Plo
include ./$(DEPDIR)/barray2d_int.Plo
include ./$(DEPDIR)/barray2d_point.Plo
include ./$(DEPDIR)/barray2d_uchar.Plo
include ./$(DEPDIR)/barray_char.Plo
include ./$(DEPDIR)/barray_complex.Plo
include ./$(DEPDIR)/barray_coordinate.Plo
include ./$(DEPDIR)/barray_double.Plo
include ./$(DEPDIR)/barray_float.Plo
include ./$(DEPDIR)/barray_hpoint.Plo
include ./$(DEPDIR)/barray_int.Plo
include ./$(DEPDIR)/barray_point.Plo
include ./$(DEPDIR)/barray_uchar.Plo
include ./$(DEPDIR)/barray_void.Plo
include ./$(DEPDIR)/coordinate.Plo
include ./$(DEPDIR)/cvector.Plo
include ./$(DEPDIR)/error.Plo
include ./$(DEPDIR)/hpoint_nd.Plo
include ./$(DEPDIR)/list.Plo
include ./$(DEPDIR)/matrixTool.Plo
include ./$(DEPDIR)/matrix_char.Plo
include ./$(DEPDIR)/matrix_complex.Plo
include ./$(DEPDIR)/matrix_double.Plo
include ./$(DEPDIR)/matrix_float.Plo
include ./$(DEPDIR)/matrix_hpoint.Plo
include ./$(DEPDIR)/matrix_int.Plo
include ./$(DEPDIR)/matrix_point.Plo
include ./$(DEPDIR)/matrix_uchar.Plo
include ./$(DEPDIR)/point_nd.Plo
include ./$(DEPDIR)/vector_char.Plo
include ./$(DEPDIR)/vector_complex.Plo
include ./$(DEPDIR)/vector_double.Plo
include ./$(DEPDIR)/vector_float.Plo
include ./$(DEPDIR)/vector_hpoint.Plo
include ./$(DEPDIR)/vector_int.Plo
include ./$(DEPDIR)/vector_point.Plo
include ./$(DEPDIR)/vector_uchar.Plo

distclean-depend:
	-rm -rf ./$(DEPDIR)

.cpp.o:
	source='$<' object='$@' libtool=no \
	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXXCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<

.cpp.obj:
	source='$<' object='$@' libtool=no \
	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXXCOMPILE) -c -o $@ `cygpath -w $<`

.cpp.lo:
	source='$<' object='$@' libtool=yes \
	depfile='$(DEPDIR)/$*.Plo' tmpdepfile='$(DEPDIR)/$*.TPlo' \
	$(CXXDEPMODE) $(depcomp) \
	$(LTCXXCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<
CXXDEPMODE = depmode=gcc3

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:
pkgincludeHEADERS_INSTALL = $(INSTALL_HEADER)
install-pkgincludeHEADERS: $(pkginclude_HEADERS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(pkgincludedir)
	@list='$(pkginclude_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(pkgincludeHEADERS_INSTALL) $$d$$p $(DESTDIR)$(pkgincludedir)/$$f"; \
	  $(pkgincludeHEADERS_INSTALL) $$d$$p $(DESTDIR)$(pkgincludedir)/$$f; \
	done

uninstall-pkgincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(pkginclude_HEADERS)'; for p in $$list; do \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " rm -f $(DESTDIR)$(pkgincludedir)/$$f"; \
	  rm -f $(DESTDIR)$(pkgincludedir)/$$f; \
	done

ETAGS = etags
ETAGSFLAGS =

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

top_distdir = ..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	@for file in $(DISTFILES); do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkinstalldirs) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES) $(HEADERS)

installdirs:
	$(mkinstalldirs) $(DESTDIR)$(libdir) $(DESTDIR)$(pkgincludedir)

install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES) stamp-h stamp-h[0-9]*

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libLTLIBRARIES clean-libtool \
	mostlyclean-am

distclean: distclean-am

distclean-am: clean-am distclean-compile distclean-depend \
	distclean-generic distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

info: info-am

info-am:

install-data-am: install-pkgincludeHEADERS

install-exec-am: install-libLTLIBRARIES

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am

maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

uninstall-am: uninstall-info-am uninstall-libLTLIBRARIES \
	uninstall-pkgincludeHEADERS

.PHONY: GTAGS all all-am check check-am clean clean-generic \
	clean-libLTLIBRARIES clean-libtool distclean distclean-compile \
	distclean-depend distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am info info-am install \
	install-am install-data install-data-am install-exec \
	install-exec-am install-info install-info-am \
	install-libLTLIBRARIES install-man install-pkgincludeHEADERS \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	tags uninstall uninstall-am uninstall-info-am \
	uninstall-libLTLIBRARIES uninstall-pkgincludeHEADERS

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
